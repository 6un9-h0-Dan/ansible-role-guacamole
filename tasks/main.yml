---
# tasks file for guacamole
- name: Create the /var/guacamole directory
  file:
    path: /var/guacamole
    state: directory
    mode: 0755

- name: Download and untar the guacamole-composition tarball
  unarchive:
    src: >
      https://api.github.com/repos/cisagov/guacamole-composition/tarball/feature/kerberization
    dest: /var/guacamole
    remote_src: yes
    extra_opts:
      - "--strip-components=1"
    creates: /var/guacamole/docker-compose.yml

- name: Update dummy username/password with real values
  copy:
    content: "{{ item.contents }}"
    dest: "/var/guacamole/secrets/{{ item.filename }}"
    mode: 0664
  loop:
    - {filename: "postgres-username", contents: "{{ postgres_username }}"}
    - {filename: "postgres-password", contents: "{{ postgres_password }}"}
  no_log: true

- name: Configure guacamole service
  block:
    - name: Set up guacamole as a systemd service
      copy:
        src: guacamole-composition.service
        dest: /lib/systemd/system/
        mode: 0644

    - name: Systemd daemon-reload
      systemd:
        daemon_reload: true

    - name: Enable guacamole systemd service
      systemd:
        name: guacamole-composition.service
        enabled: true
  when:
    - ansible_service_mgr == "systemd"

- name: Configure PAM for guacamole and guacamole-admin services
  copy:
    content: |
        auth    required   pam_sss.so
        account required   pam_sss.so
    dest: /etc/pam.d/{{ item }}
    mode: 0644
  loop:
    - guacamole
    - guacamole-admin

# TODO - Fix below tasks for non-Debian hosts, so we can add support
# for them.
- name: Configure httpd for guacamole
  block:
    - name: Disable listening on port 80
      lineinfile:
        path: /etc/apache2/ports.conf
        state: absent
        regexp: Listen 80

    - name: Disable default httpd configuration
      file:
        path: /etc/apache2/sites-enabled/000-default.conf
        state: absent

    # This helps us with idempotence, since if we tell apache2ctl not
    # to check the config then it blindly tries to install all the
    # modules again when it installs cisagov/ansible-role-httpd a
    # second time and fails.
    - name: Create dummy non-empty SSL cert files so apache2ctl thinks the config is valid
      block:
        - name: Ensure cert directory exists
          file:
            path: /var/guacamole/httpd/ssl
            state: directory
            mode: 0755
        - name: Create dummy cert files
          copy:
            content: Hello
            dest: /var/guacamole/httpd/ssl/{{ item }}
            mode: 0644
          loop:
            - self.cert
            - self-ssl.key

    - name: Copy guacamole httpd configuration
      copy:
        src: guacamole_httpd_config
        dest: /etc/apache2/sites-available/guacamole.conf
        mode: 0644

    - name: Enable guacamole httpd configuration
      file:
        src: /etc/apache2/sites-available/guacamole.conf
        dest: /etc/apache2/sites-enabled/guacamole.conf
        state: link

    # The real SSL certificates for the web server aren't available
    # until cloud-final has completed.
    - name: Ensure that httpd only starts after cloud-final has completed
      lineinfile:
        path: /lib/systemd/system/apache2.service
        backrefs: yes
        # The exclamation mark forces us to quote the string because
        # it is a special character in YAML.
        #
        # The (?<!...) jazz is a negative look-behind assertion.  See
        # here, for example:
        # https://docs.python.org/3/library/re.html
        #
        # Note also that cloud-final.service must always appear at the
        # end of the After=... line for this to work.
        regexp: '^After=(.*)(?<!cloud\-final\.service)$'
        line: After=\1 cloud-final.service

- name: Copy setup script
  copy:
    src: setup_guacamole_services.sh
    dest: /usr/local/sbin
    mode: 0700
